import debug_ext::(debug)
import request
import response


trait pub RouteMatcher {
  fn pub match(request: ref request::HttpRequest) -> Bool
}


class pub FixedRoute {
  let @method: request::Method 
  let @path: request::Path

  fn pub static get(path: String) -> Self {
    FixedRoute {
      @method = request::Method.Get
      @path = request::Path.new(path)
    }
  }
}



impl RouteMatcher for FixedRoute {
  fn pub match(request: ref request::HttpRequest) -> Bool {
    debug(request.method)
    debug(@method)
    debug(request.path)
    debug(@path)
    if (request.method != @method) {
      return false
    }
    if (request.path != @path) {
      return false
    }
    return true
  }
}

